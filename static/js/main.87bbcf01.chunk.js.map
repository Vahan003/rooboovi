{"version":3,"sources":["reducers/rooms.reducer.js","reducers/booking.reducer.js","reducers/visitors.reducer.js","reducers/index.js","store/store.js","API/index.js","actions/rooms.actions.js","screens/Rooms/Rooms.jsx","thunks/rooms.thunk.js","screens/Booking/Booking.jsx","thunks/booking.thunk.js","actions/booking.actions.js","screens/Visitors/Visitors.jsx","thunks/visitors.thunk.js","actions/visitors.actions.js","components/Page404.js","components/Navigation.jsx","App.js","index.js"],"names":["initialState","gettingStatus","getRoomsStatus","postRoomStatus","postRoom","rooms","status","booking","visitors","getBookingStatus","getVisitorsStatus","combineReducers","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","axiosInstance","axios","create","baseURL","responseType","Endpoint","EndpointFactory","roomsStatus","bookings","putRoom","id","postRoomSuccsess","data","Rooms","props","checkEmtyInputs","poster","floor","beds","balcony","roomId","setState","checked","emtyInputs","onEdit","elem","updating","ID","onDelete","deleteRoom","onCreate","createRoom","onUpdate","updateRoom","setTimeout","posted","getInp","e","target","name","value","bookedAt","Date","available","this","getStatus","getRooms","PrevProps","console","log","className","onChange","selected","disabled","hidden","onClick","map","ind","d","parse","key","getDate","getMonth","getFullYear","PureComponent","connect","dispatch","a","async","api","get","response","Error","post","postRoomThunk","put","putRoomThunk","delete","deleteRoomThunk","Booking","onbut","getBooking","personName","roomNumber","personId","Component","Visitors","getVisitors","createdDate","Page404","location","pathname","Navigation","to","path","exact","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87bbcf01.chunk.js","sourcesContent":["const initialState = {\r\n    gettingStatus : false,\r\n    getRoomsStatus: false,\r\n    postRoomStatus:true,\r\n    postRoom: \"\",\r\n    rooms: [],\r\n    status        : {\r\n      rooms: 0,\r\n      booking: 0,\r\n      visitors: 0\r\n    }\r\n  };\r\n  \r\n  export default function roomsReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n      \r\n      case 'GET_STATUS_REQUEST': \r\n        return {\r\n          ...state,\r\n          gettingStatus: true,\r\n        }\r\n      case 'GET_STATUS_SUCCSESS': \r\n      return {\r\n        ...state,\r\n        gettingStatus: false,\r\n        status: action.payload\r\n      }\r\n      case 'GET_STATUS_FAILURE': \r\n      return {\r\n        ...state,\r\n        gettingStatus: false,\r\n      }\r\n      case 'GET_ROOMS_SUCCSESS':\r\n      return {\r\n        ...state,\r\n        getRoomsStatus: true,\r\n        rooms: action.payload\r\n      }\r\n      case 'GET_ROOMS_FAILURE':\r\n      return {\r\n        ...state,\r\n        getRoomsStatus: false,\r\n      }\r\n      case 'POST_ROOM_SUCCSESS':\r\n      return {\r\n        ...state,\r\n        postRoomStatus: true,\r\n        postRoom: action.payload\r\n      }\r\n      case 'POST_ROOM_FAILURE':\r\n      return {\r\n        ...state,\r\n        postRoomStatus: false,\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  }","const initialState = {\r\n    getBookingStatus: false,\r\n    booking: []\r\n  };\r\n  \r\n  export default function bookingReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n      case 'GET_BOOKING_SUCCSESS':\r\n      return {\r\n        ...state,\r\n        getBookingStatus: true,\r\n        booking: action.payload\r\n      }\r\n      case 'GET_BOOKING_FAILURE':\r\n      return {\r\n        ...state,\r\n        getBookingStatus: false,\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  }","const initialState = {\r\n    getVisitorsStatus: false,\r\n    visitors: []\r\n  };\r\n  \r\n  export default function visitorsReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n      case 'GET_VISITORS_SUCCSESS':\r\n      return {\r\n        ...state,\r\n        getVisitorsStatus: true,\r\n        visitors: action.payload\r\n      }\r\n      case 'GET_VISITORS_FAILURE':\r\n      return {\r\n        ...state,\r\n        getVisitorsStatus: false,\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  }","import {combineReducers} from 'redux'\r\nimport roomsReducer from './rooms.reducer'\r\nimport bookingReducer from './booking.reducer'\r\nimport visitorsReducer from './visitors.reducer'\r\n\r\n\r\nexport default combineReducers({\r\n    rooms: roomsReducer,\r\n    booking: bookingReducer,\r\n    visitors: visitorsReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux'; // to create the store and middleware\r\nimport rootReducer from '../reducers'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middleware = [thunk]; \r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import axios from \"axios\";\r\nimport EndpointFactory from \"axios-endpoints\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"https://it-blog-posts.herokuapp.com/api/\",\r\n  responseType: \"json\"\r\n});\r\n\r\nconst Endpoint = EndpointFactory(axiosInstance);\r\n\r\nexport default {\r\n  rooms       : new Endpoint(\"rooms\"),\r\n  roomsStatus : new Endpoint(\"rooms/status\"),\r\n  bookings    : new Endpoint(\"roomBookings\"),\r\n  visitors    : new Endpoint(\"visitors\"),\r\n  putRoom     :(id)=> new Endpoint(\"rooms/\"+id)\r\n}","export const getStatusRequest = () => ({\r\n  type: 'GET_STATUS_REQUEST'\r\n})\r\n\r\nexport const getStatusSuccsess = (data) => ({\r\n  type: 'GET_STATUS_SUCCSESS',\r\n  payload: data\r\n})\r\n\r\nexport const getStatusFailure = () => ({\r\n  type: 'GET_STATUS_FAILURE'\r\n})\r\n\r\nexport const getRoomsSuccsess = (data) => ({\r\n  type: 'GET_ROOMS_SUCCSESS',\r\n  payload: data\r\n})\r\n\r\nexport const getRoomsFailure = () => ({\r\n  type: 'GET_ROOMS_FAILURE'\r\n})\r\n\r\nexport const postRoomSuccsess = (data) => ({\r\n  type: 'POST_ROOM_SUCCSESS',\r\n  payload: data\r\n})\r\n\r\nexport const postRoomFailure = () => ({\r\n  type: 'POST_ROOM_FAILURE'\r\n})","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getStatusThunk,\r\n  getRoomsThunk,\r\n  postRoomThunk,\r\n  putRoomThunk,\r\n  deleteRoomThunk\r\n} from \"../../thunks\";\r\nimport \"./rooms.style.scss\";\r\nclass Rooms extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: true,\r\n      updating: false,\r\n      ID: \"\",\r\n      poster: {\r\n        bookedAt: new Date(),\r\n        floor: \"\",\r\n        beds: \"\",\r\n        balcony: \"\",\r\n        roomId: \"\",\r\n        available: false\r\n      }\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.getStatus();\r\n    this.props.getRooms();\r\n  }\r\n  componentDidUpdate(PrevProps) {\r\n    if(this.props.rooms.postRoom !== PrevProps.rooms.postRoom){\r\n    console.log(\"DID_UPDATE\",this.props)\r\n    this.props.getRooms();\r\n    this.props.getStatus();\r\n    console.log(this.state.posted)\r\n    }\r\n  }\r\n\r\n  checkEmtyInputs = () => {\r\n    if (\r\n      this.state.poster.floor !== \"\" &&\r\n      this.state.poster.beds !== \"\" &&\r\n      this.state.poster.balcony !== \"\" &&\r\n      this.state.poster.roomId !== \"\"\r\n    ){\r\n      this.setState({\r\n       checked: true\r\n      })\r\n      return true;\r\n    }\r\n    else {\r\n      this.setState({\r\n        checked: false\r\n       })\r\n      return false;\r\n    }\r\n  };\r\n  emtyInputs = () => {\r\n    this.setState({\r\n      poster: {\r\n        ...this.state.poster,\r\n        floor: \"\",\r\n        beds: \"\",\r\n        balcony: \"\",\r\n        roomId: \"\"\r\n      }\r\n    });\r\n  };\r\n  onEdit = elem => {\r\n    this.setState({\r\n      updating: true,\r\n      ID: elem.id,\r\n      poster: {\r\n        ...this.state.poster,\r\n        floor: elem.floor,\r\n        beds: elem.beds,\r\n        balcony: elem.balcony,\r\n        roomId: elem.roomId\r\n      }\r\n    });\r\n  };\r\n  onDelete = elem => {\r\n    this.props.deleteRoom(elem.id);\r\n    \r\n  };\r\n  onCreate = () => {\r\n    if (this.checkEmtyInputs()) {\r\n      this.props.createRoom(this.state.poster);\r\n    }\r\n  }\r\n  onUpdate =  () => {\r\n    if (this.checkEmtyInputs()) {\r\n      this.props.updateRoom(this.state.poster, this.state.ID)\r\n      setTimeout(()=>{\r\n        if(this.props.rooms.postRoomStatus){\r\n          this.emtyInputs();\r\n        this.setState({\r\n          updating: false\r\n        });\r\n      } else{\r\n        this.setState({\r\n          updating: true\r\n        });\r\n      }  \r\n      },600)\r\n    }\r\n    else{\r\n      this.setState({\r\n        posted: this.props.rooms.postRoomStatus,\r\n        updating: true\r\n      });\r\n    }\r\n   \r\n  };\r\n  getInp = e => {\r\n    this.setState({\r\n      poster: {\r\n        ...this.state.poster,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Rooms\">\r\n        <div className=\"RoomsLeftSide\">\r\n          <div className=\"amountAll\">\r\n            <div className=\"amount\">\r\n              {this.props.rooms.status.rooms\r\n                ? this.props.rooms.status.rooms\r\n                : \"-\"}\r\n              <div className=\"amountText\">Rooms</div>\r\n            </div>\r\n            <div className=\"amount\">\r\n              {this.props.rooms.status.booking\r\n                ? this.props.rooms.status.booking\r\n                : \"-\"}\r\n              <div className=\"amountText\">Booking</div>\r\n            </div>\r\n            <div className=\"amount\">\r\n              {this.props.rooms.status.visitors\r\n                ? this.props.rooms.status.visitors\r\n                : \"-\"}\r\n              <div className=\"amountText\">Visitors</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"roomsInput\">\r\n            <div className=\"inpSection\">\r\n              Add New Room\r\n              <div className=\"inp\">\r\n                Floor\r\n                <input\r\n                  name=\"floor\"\r\n                  onChange={this.getInp}\r\n                  className={this.state.checked && this.props.rooms.postRoomStatus  ? \"\" : \"redborder\"}\r\n                  value={this.state.poster.floor}\r\n                ></input>\r\n              </div>\r\n              <div className=\"inp\">\r\n                Beds\r\n                <input\r\n                  name=\"beds\"\r\n                  onChange={this.getInp}\r\n                  className={this.state.checked &&this.props.rooms.postRoomStatus ? \"\" : \"redborder\"}\r\n                  value={this.state.poster.beds}\r\n                ></input>\r\n              </div>\r\n              <div className=\"inp\">\r\n                Balcony\r\n                <select\r\n                  name=\"balcony\"\r\n\r\n                  onChange={this.getInp}\r\n                  className={this.state.checked &&this.props.rooms.postRoomStatus ? \"\" : \"redborder\"}\r\n                  value={this.state.poster.balcony}\r\n                > \r\n                <option value=\"\" selected disabled hidden>Choose</option>\r\n                  <option value={true}>Yes</option>\r\n                  <option value={false}>No</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"inp\">\r\n                Room Number\r\n                <input\r\n                  name=\"roomId\"\r\n                  onChange={this.getInp}\r\n                  className={this.state.checked &&this.props.rooms.postRoomStatus ? \"\" : \"redborder\"}\r\n                  value={this.state.poster.roomId}\r\n                ></input>\r\n              </div>\r\n              {this.state.updating ? (\r\n                <button onClick={this.onUpdate}>Update</button>\r\n              ) : (\r\n                <button onClick={this.onCreate}>Create</button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"RoomsRigthSide\">\r\n          <table>\r\n            <thead className=\"theadT\">\r\n              <tr className=\"trH\">\r\n                <th>#ID</th>\r\n                <th>Booked At</th>\r\n                <th>Floor</th>\r\n                <th>Beds</th>\r\n                <th>Balcony</th>\r\n                <th>Number</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"tbodyT\">\r\n              {this.props.rooms.rooms.map((e, ind) => {\r\n                const d = new Date(Date.parse(e.bookedAt));\r\n                return (\r\n                  <tr key={e.id} className=\"trT\">\r\n                    <th>{ind + 1}</th>\r\n                    <th>{`${d.getDate()}/${d.getMonth()}/${d.getFullYear()}`}</th>\r\n                    <th className={e.floor > 0 ? \"\" : \"thRed\"}>{e.floor}</th>\r\n                    <th className={e.beds > 0 ? \"\" : \"thRed\"}>{e.beds}</th>\r\n                    <th className={e.balcony ? \"thGreen\" : \"thRed\"}>\r\n                      {e.balcony ? \"Yes\" : \"No\"}{\" \"}\r\n                    </th>\r\n                    <th className={e.roomId > 0 ? \"\" : \"thRed\"}>{e.roomId}</th>\r\n                    <th className=\"Edit\" onClick={() => this.onEdit(e)}></th>\r\n                    <th\r\n                      className=\"Delete\"\r\n                      onClick={() => this.onDelete(e)}\r\n                    ></th>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { rooms } = state;\r\n  return {\r\n    rooms\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getStatus: () => {\r\n      dispatch(getStatusThunk());\r\n    },\r\n    getRooms: () => {\r\n      dispatch(getRoomsThunk());\r\n    },\r\n    createRoom: data => {\r\n      dispatch(postRoomThunk(data));\r\n    },\r\n    updateRoom: (data, id) => {\r\n      dispatch(putRoomThunk(data, id));\r\n    },\r\n    deleteRoom: id => {\r\n      dispatch(deleteRoomThunk(id));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Rooms);\r\n","import api from '../API';\r\nimport { getStatusRequest, getStatusSuccsess, getStatusFailure,getRoomsSuccsess,getRoomsFailure,postRoomFailure,postRoomSuccsess } from '../actions';\r\n\r\nexport const getStatusThunk = () => async (dispatch) => {\r\n  try {\r\n    dispatch(getStatusRequest());\r\n    const response = await api.roomsStatus.get();\r\n    if (response.status !== 200) {\r\n      throw new Error('Cannot get status')\r\n    }\r\n    dispatch(getStatusSuccsess(response.data.status));\r\n  } catch (error) {\r\n    dispatch(getStatusFailure());\r\n  }\r\n}\r\n\r\nexport const getRoomsThunk = () => async (dispatch) => {\r\n  try {\r\n    \r\n    const response = await api.rooms.get();\r\n    if (response.status !== 200) {\r\n      throw new Error('Cannot get rooms')\r\n    }\r\n    dispatch(getRoomsSuccsess(response.data));\r\n  } catch (error) {\r\n    dispatch(getRoomsFailure());\r\n  }\r\n}\r\n\r\nexport const postRoomThunk = (data) => async (dispatch) => {\r\n  try {\r\n    \r\n    const response = await api.rooms.post(data);\r\n    if (response.status !== 200) {\r\n      throw new Error('Cannot post room')\r\n    }\r\n    dispatch(postRoomSuccsess(response));\r\n  } catch (error) {\r\n    dispatch(postRoomFailure());\r\n  }\r\n}\r\nexport const putRoomThunk = (data,id) => async (dispatch) => {\r\n  try {\r\n  \r\n    const response = await api.putRoom(id).put(data);\r\n    \r\n    if (response.status !== 200) {\r\n      throw new Error('Cannot post room')\r\n    }\r\n    dispatch(postRoomSuccsess(response));\r\n  } catch (error) {\r\n    dispatch(postRoomFailure());\r\n  }\r\n}\r\n\r\nexport const deleteRoomThunk = (id) => async (dispatch) => {\r\n  try {\r\n  \r\n    const response = await api.putRoom(id).delete();\r\n    \r\n    if (response.status !== 200) {\r\n      throw new Error('Cannot post room')\r\n    }\r\n    dispatch(postRoomSuccsess(response));\r\n  \r\n  } catch (error) {\r\n    dispatch(postRoomFailure());\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getBookingThunk } from '../../thunks'\r\nimport './booking.style.scss'\r\nclass Booking extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getBooking()\r\n    console.log('PROPS:', this.props)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log('PROPS:', this.props)\r\n  }\r\n  onbut=()=>{\r\n     console.log(this.props.rooms.status)\r\n     \r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Booking\">\r\n        <div className=\"BookingLeftSide\">\r\n        <div className=\"bookingInput\">\r\n          ...\r\n        </div>\r\n        </div>\r\n        <div className=\"BookingRigthSide\">\r\n        <table>\r\n      <thead className=\"theadT\">\r\n      <tr className=\"trH\">\r\n        <th>#ID</th>\r\n      <th>Person Name</th>\r\n      <th>Room ID</th>\r\n      <th>Booked At</th>\r\n      <th>Person ID</th>\r\n      <th>Edit</th>\r\n      <th>Delete</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody className=\"tbodyT\">\r\n    { \r\n    \r\n      this.props.booking.booking.map((e,ind)=>{\r\n        const d = new Date(Date.parse(e.bookedAt));\r\n        return (\r\n        <tr key = {e.id}  className=\"trT\">\r\n          <th>{ind+1}</th>\r\n        <th>{e.personName}</th>\r\n        <th>{e.roomNumber}</th>\r\n        <th>{`${d.getDate()}/${d.getMonth()}/${d.getFullYear()}`}</th>\r\n        <th>{e.personId}</th>\r\n        <th className=\"Edit\" onClick={this.onEdit}></th>\r\n        <th className=\"Delete\" onClick={this.onDelete}></th>\r\n        </tr>)\r\n        })\r\n    }\r\n    </tbody>\r\n    </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { booking } = state\r\n  return {\r\n    booking\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getBooking: () => {\r\n      dispatch(getBookingThunk())\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Booking);","import api from '../API';\r\nimport { getBookingSuccsess,getBookingFailure } from '../actions';\r\n\r\nexport const getBookingThunk = () => async (dispatch) => {\r\n    try {\r\n      \r\n      const response = await api.bookings.get();\r\n      if (response.status !== 200) {\r\n        throw new Error('Cannot get rooms')\r\n      }\r\n      dispatch(getBookingSuccsess(response.data));\r\n    } catch (error) {\r\n      dispatch(getBookingFailure());\r\n    }\r\n  }","export const getBookingSuccsess = (data) => ({\r\n    type: 'GET_BOOKING_SUCCSESS',\r\n    payload: data\r\n  })\r\n  \r\n  export const getBookingFailure = () => ({\r\n    type: 'GET_BOOKING_FAILURE'\r\n  })","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getVisitorsThunk } from '../../thunks'\r\nimport './visitors.style.scss'\r\nclass Visitors extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getVisitors()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log('PROPS:', this.props)\r\n  }\r\n  onbut=()=>{\r\n     console.log(this.props.rooms.status)\r\n     \r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Visitors\">\r\n      <div className=\"VisitorsLeftSide\">\r\n      <div className=\"visitorsInput\">\r\n        ...\r\n      </div>\r\n      </div>\r\n      <div className=\"VisitorsRigthSide\">\r\n      <table>\r\n      <thead className=\"theadT\">\r\n      <tr className=\"trH\">\r\n        <th>#ID</th>\r\n      <th>Person Name</th>\r\n      <th>Person ID</th>\r\n      <th>Date</th>\r\n      <th>Card Number</th>\r\n      <th>Edit</th>\r\n      <th>Delete</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody className=\"tbodyT\">\r\n    { \r\n    \r\n      this.props.visitors.visitors.map((e,ind)=>{\r\n        const d = new Date(Date.parse(e.createdDate));\r\n        return (\r\n        <tr key = {e.id}  className=\"trT\">\r\n          <th>{ind+1}</th>\r\n        <th>{e.personName}</th>\r\n        <th>{e.personId}</th>\r\n        <th>{`${d.getDate()}/${d.getMonth()}/${d.getFullYear()}`}</th>\r\n        <th>{e.personId}</th>\r\n        <th className=\"Edit\" onClick={this.onEdit}></th>\r\n        <th className=\"Delete\" onClick={this.onDelete}></th>\r\n        </tr>)\r\n        })\r\n    }\r\n    </tbody>\r\n    </table>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { visitors } = state\r\n  return {\r\n    visitors\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getVisitors: () => {\r\n      dispatch(getVisitorsThunk())\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Visitors);","import api from '../API';\r\nimport { getVisitorsSuccsess,getVisitorsFailure } from '../actions';\r\n\r\nexport const getVisitorsThunk = () => async (dispatch) => {\r\n    try {\r\n      \r\n      const response = await api.visitors.get();\r\n      if (response.status !== 200) {\r\n        throw new Error('Cannot get rooms')\r\n      }\r\n      dispatch(getVisitorsSuccsess(response.data));\r\n    } catch (error) {\r\n      dispatch(getVisitorsFailure());\r\n    }\r\n  }","export const getVisitorsSuccsess = (data) => ({\r\n    type: 'GET_VISITORS_SUCCSESS',\r\n    payload: data\r\n  })\r\n  \r\n  export const getVisitorsFailure = () => ({\r\n    type: 'GET_VISITORS_FAILURE'\r\n  })","import React from 'react'\r\n\r\n\r\nconst Page404 = ({ location }) => (\r\n    <div>\r\n       <h2>No match found for <code>{location.pathname}</code></h2>\r\n    </div>\r\n );\r\n\r\n export default Page404;","import React,{ PureComponent,Fragment} from 'react'\r\nimport Rooms from '../screens/Rooms'\r\nimport Booking from '../screens/Booking'\r\nimport Visitors from '../screens/Visitors'\r\nimport Page404 from './Page404'\r\nimport {\r\n   // BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    HashRouter \r\n  } from \"react-router-dom\";\r\n\r\nclass Navigation extends PureComponent{\r\n\r\n    render(){\r\n        return (\r\n          <HashRouter>\r\n            \r\n      <Fragment>\r\n        <nav className=\"navigation\">\r\n          <ul className=\"links\">\r\n            <li className=\"link\">\r\n              <Link to=\"/\">Rooms</Link>\r\n            </li>\r\n            <li className=\"link\">\r\n              <Link to=\"/booking\">Booking</Link>\r\n            </li>\r\n            <li className=\"link\">\r\n              <Link to=\"/visitors\">Visitors</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <Switch>\r\n          <Route path=\"/\" exact component = {Rooms}/>\r\n          <Route path=\"/visitors\" component={Visitors}/>\r\n          <Route path=\"/booking\" component={Booking}/>\r\n          <Route component={Page404} />\r\n        </Switch>\r\n        </Fragment>\r\n        \r\n        </HashRouter>);\r\n    }\r\n\r\n}\r\n\r\nexport default Navigation;","import React,{Fragment} from 'react';\nimport Navigation from './components/Navigation.jsx'\n\nimport './App.scss';\nfunction App() {\n   return(\n   <Fragment>\n     <div className=\"toptab\">\n     </div>\n     <Navigation/>\n   </Fragment>)\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from './store/store'\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n<Provider store={store}>\n<App />\n</Provider> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}